{"version":3,"sources":["assets/logo.png","classes/Recognizer.js","classes/RecordHelper.js","components/KeywordComponents/KeywordItem.js","components/KeywordComponents/KeywordList.js","components/KeywordComponents/KeywordData.js","components/KeywordComponents/KeywordForm.js","components/EmergencySender.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Recognizer","Object","classCallCheck","this","transcript","lastStartedAt","Recognition","window","SpeechRecognition","webkitSpeechRecognition","recognition","lang","onspeechend","console","log","alert","onEnd","_this","listening","Date","getTime","start","onresult","event","text","results","onend","timeSinceLast","setTimeout","RecorderHelper","recorder","vmsg","Recorder","wasmURL","ms","Promise","resolve","sec","initAudio","initWorker","startRecording","sleep","stopRecording","blob","URL","createObjectURL","Container","styled","div","_templateObject","Item","li","_templateObject2","Button","button","_templateObject3","KeywordItem","_ref","content","onRemove","react_default","a","createElement","onClick","List","ul","KeywordList_templateObject","KeywordList","keywords","map","keyword","KeywordComponents_KeywordItem","key","id","KeywordData","now","KeywordForm_templateObject","Label","label","KeywordForm_templateObject2","Input","input","KeywordForm_templateObject3","KeywordForm","props","possibleConstructorReturn","getPrototypeOf","call","state","keywordInput","bind","assertThisInitialized","handleKeyDown","handleChange","_this2","setState","filter","onUpdate","_this3","newData","concat","target","value","KeywordForm_Container","htmlFor","KeywordComponents_KeywordList","type","onKeyDown","onChange","React","Component","EmergencySender","serverKey","keys","clientKey","fcm","FCM","body","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","accuracy","pushData","to","notification","title","sound","icon","priority","restricted_package_name","data","String","send","err","response","error","warn","enableHighAccuracy","App_templateObject","Logo","img","App_templateObject2","Subtitle","span","App_templateObject3","App","recognizer","RecordHelper","startRecognition","onKeywordUpdate","realEmergency","emergencySender","asyncToGenerator","regenerator_default","mark","_callee","i","wrap","_context","prev","next","length","replace","includes","sent","downloadFile","toDateString","abrupt","stop","_x","apply","arguments","fileName","link","document","href","download","append","click","remove","addEventListener","e","revokeObjectURL","once","App_Container","className","src","logo","KeywordForm_KeywordForm","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8129f321.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.285d437c.png\";","export default class Recognizer {\n  constructor() {\n    this.transcript = \"\";\n    this.lastStartedAt = 0;\n\n    const Recognition =\n      window.SpeechRecognition || window.webkitSpeechRecognition;\n\n    if (!Recognition) {\n      alert(\n        \"이 브라우저에서는 음성 인식을 지원하지 않습니다. 크롬 브라우저로 시도해주세요.\"\n      );\n      return;\n    }\n\n    this.recognition = new Recognition();\n    this.recognition.lang = \"ko-KR\";\n\n    this.recognition.onspeechend = () => {\n      console.log(\"멈춤\");\n    };\n  }\n\n  start(onEnd) {\n    if (this.listening) {\n      return;\n    }\n\n    this.lastStartedAt = new Date().getTime();\n\n    this.recognition.start();\n\n    this.recognition.onresult = event => {\n      const text = event.results[0][0].transcript;\n      this.transcript = text;\n      console.log(\"인식 : \", text);\n    };\n\n    this.recognition.onend = event => {\n      onEnd(this.transcript);\n      this.transcript = \"\";\n      const timeSinceLast = new Date().getTime() - this.lastStartedAt;\n      if (timeSinceLast < 1000) {\n        setTimeout(() => {\n          this.start(onEnd);\n        }, 1000 - timeSinceLast);\n      } else {\n        this.start(onEnd);\n      }\n    };\n  }\n}\n","import vmsg from \"vmsg\";\n\nexport default class RecorderHelper {\n  constructor() {\n    this.recorder = new vmsg.Recorder({\n      wasmURL: \"https://unpkg.com/vmsg@0.3.0/vmsg.wasm\"\n    });\n  }\n\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  async startRecording(sec) {\n    await this.recorder.initAudio();\n    await this.recorder.initWorker();\n    this.recorder.startRecording();\n\n    await this.sleep(sec * 1000);\n\n    const blob = await this.recorder.stopRecording();\n    return URL.createObjectURL(blob);\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  border: 1px solid #dee2e6;\n  border-radius: 0.2rem;\n\n  background-color: #f8f9fa;\n\n  padding: 0.5rem;\n\n  margin-bottom: 0.5rem;\n`;\n\nconst Item = styled.li`\n  font-family: \"Noto Sans KR\", sans-serif;\n  font-size: 1.2rem;\n\n  margin-right: auto;\n`;\n\nconst Button = styled.button`\n  background-color: #ffe3e3;\n  color: #ff6b6b;\n  border: 1px solid #ffa8a8;\n  border-radius: 0.2rem;\n\n  padding: 0.2rem 0.5rem;\n`;\n\nconst KeywordItem = ({ content, onRemove }) => {\n  return (\n    <Container>\n      <Item> {content} </Item>\n      <Button onClick={onRemove}>삭제</Button>\n    </Container>\n  );\n};\n\nexport default KeywordItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport KeywordItem from \"./KeywordItem\";\n\nconst List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nconst KeywordList = ({ keywords, onRemove }) => (\n  <List>\n    {keywords.map(keyword => (\n      <KeywordItem\n        key={keyword.id}\n        content={keyword.content}\n        onRemove={() => onRemove(keyword.id)}\n      />\n    ))}\n  </List>\n);\n\nexport default KeywordList;\n","export default class KeywordData {\n  constructor(content) {\n    this.content = content;\n    this.id = Date.now();\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport KeywordList from \"./KeywordList\";\nimport KeywordData from \"./KeywordData\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  align-items: left;\n`;\n\nconst Label = styled.label`\n  font-family: \"Noto Sans KR\", sans-serif;\n  font-size: 1rem;\n\n  color: #495057;\n\n  margin-bottom: 0.3rem;\n  margin-top: 1.5rem;\n`;\n\nconst Input = styled.input`\n  border: none;\n  outline: none;\n\n  box-shadow: 0px 3px 6px #dee2e6;\n\n  font-size: 1.3rem;\n  font-family: \"Noto Sans KR\", sans-serif;\n\n  width: 70vw;\n  max-width: 30rem;\n\n  padding: 0.5rem 0.5rem;\n`;\n\nexport default class KeywordForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      keywords: this.props.keywords,\n      keywordInput: \"\"\n    };\n\n    this.onRemove = this.onRemove.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onRemove(id) {\n    this.setState(\n      {\n        keywords: this.state.keywords.filter(keyword => keyword.id !== id)\n      },\n      () => this.props.onUpdate(this.state.keywords)\n    );\n  }\n\n  handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      const newData = new KeywordData(this.state.keywordInput);\n      this.setState(\n        {\n          keywords: this.state.keywords.concat(newData),\n          keywordInput: \"\"\n        },\n        () => this.props.onUpdate(this.state.keywords)\n      );\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      keywordInput: event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Label htmlFor=\"keywordInput\">키워드 설정</Label>\n        <KeywordList keywords={this.state.keywords} onRemove={this.onRemove} />\n        <Input\n          id=\"keywordInput\"\n          type=\"text\"\n          onKeyDown={this.handleKeyDown}\n          onChange={this.handleChange}\n          value={this.state.keywordInput}\n        />\n      </Container>\n    );\n  }\n}\n","import FCM from \"fcm-push\";\nimport keys from \"../assets/keys.json\";\n\nexport default class EmergencySender {\n  constructor() {\n    // You need to set these to actually run woosan\n    this.serverKey = keys.serverKey;\n    this.clientKey = keys.clientKey;\n\n    this.fcm = new FCM(this.serverKey);\n  }\n\n  send(body) {\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        var latitude = position.coords.latitude;\n        var longitude = position.coords.longitude;\n\n        console.log(latitude);\n        console.log(longitude);\n        console.log(position.coords.accuracy);\n\n        const pushData = {\n          to: this.clientKey,\n          notification: {\n            title: \"우산\",\n            body: body,\n            sound: \"default\",\n            icon: \"ic_stat_name\"\n          },\n          priority: \"high\",\n          restricted_package_name: \"com.example.woosan\",\n          data: {\n            latitude: String(latitude),\n            longitude: String(longitude)\n          }\n        };\n\n        this.fcm.send(pushData, function (err, response) {\n          if (err) {\n            console.error(\"Push메시지 발송에 실패했습니다.\");\n            console.error(err);\n            return;\n          }\n\n          console.log(\"Push메시지가 발송되었습니다.\");\n          console.log(response);\n        });\n      },\n      err => {\n        console.warn(err);\n      },\n      {\n        enableHighAccuracy: true\n      }\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport logo from \"../assets/logo.png\";\n\nimport Recognizer from \"../classes/Recognizer\";\nimport RecordHelper from \"../classes/RecordHelper\";\n\nimport KeywordForm from \"./KeywordComponents/KeywordForm\";\nimport EmergencySender from \"./EmergencySender\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n\n  margin-bottom: 3rem;\n`;\n\nconst Logo = styled.img`\n  border-radius: 100%;\n\n  margin-top: 3rem;\n  margin-bottom: 0.5rem;\n\n  height: 6rem;\n`;\n\nconst Subtitle = styled.span`\n  color: #707070;\n\n  font-family: \"Noto Sans KR\", sans-serif;\n  font-size: 0.9rem;\n`;\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      keywords: []\n    };\n\n    this.recognizer = new Recognizer();\n    this.recorder = new RecordHelper();\n\n    this.startRecognition = this.startRecognition.bind(this);\n    this.onKeywordUpdate = this.onKeywordUpdate.bind(this);\n\n    this.realEmergency = this.realEmergency.bind(this);\n\n    this.emergencySender = new EmergencySender();\n\n    this.startRecognition();\n  }\n\n  startRecognition() {\n    this.recognizer.start(async text => {\n      for (var i = 0; i < this.state.keywords.length; i++) {\n        if (text.replace(/ /g, \"\").includes(this.state.keywords[i].content)) {\n          this.emergencySender.send(\"OO님이 위험에 처했습니다.\");\n\n          const blob = await this.recorder.startRecording(5);\n          this.downloadFile(blob, new Date().toDateString());\n          return;\n        }\n      }\n    });\n  }\n\n  downloadFile(blob, fileName) {\n    const link = document.createElement(\"a\");\n\n    link.href = blob;\n    link.download = fileName;\n\n    document.body.append(link);\n    link.click();\n    link.remove();\n\n    window.addEventListener(\"focus\", e => URL.revokeObjectURL(link.href), {\n      once: true\n    });\n  }\n\n  onKeywordUpdate(value) {\n    this.setState({\n      keywords: value\n    });\n  }\n\n  async realEmergency() {\n    this.emergencySender.send(\"OO님이 위험에 처했습니다.\");\n\n    const blob = await this.recorder.startRecording(5);\n    this.downloadFile(blob, new Date().toDateString());\n    return;\n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <Logo src={logo} onClick={this.realEmergency} />\n        <Subtitle>To prevent further rain</Subtitle>\n        <KeywordForm\n          keywords={this.state.keywords}\n          onUpdate={this.onKeywordUpdate}\n        />\n      </Container>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}